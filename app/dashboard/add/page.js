"use client";

import { useState } from "react";
import { useRouter } from "next/navigation";
import { db } from "@/app/firebase"; // ููุท Firestore ุจุฏูู Storage
import { collection, addDoc } from "firebase/firestore";

export default function AddProductPage() {
  const router = useRouter();
  const [product, setProduct] = useState({
    code: "",
    name: "",
    quantity: "",
    weight: "",
    store: "chocolate",
    imageUrl: "", // ุจุฏู imageFile
  });

  const handleAddProduct = async () => {
    if (!product.code || !product.name || !product.quantity) {
      alert("ูุฑุฌู ุชุนุจุฆุฉ ุงูููุฏ ูุงูุงุณู ูุงููููุฉ.");
      return;
    }

    try {
      await addDoc(collection(db, "products"), {
        code: product.code,
        name: product.name,
        quantity: Number(product.quantity),
        weight: Number(product.weight),
        store: product.store,
        image: product.imageUrl, // ูุญูุธ ุงูุฑุงุจุท ูุจุงุดุฑุฉ
      });

      alert("โ ุชูุช ุฅุถุงูุฉ ุงูููุชุฌ ุจูุฌุงุญ!");
      setProduct({
        code: "",
        name: "",
        quantity: "",
        weight: "",
        store: "chocolate",
        imageUrl: "",
      });
    } catch (error) {
      console.error("ุฎุทุฃ ูู ุฅุถุงูุฉ ุงูููุชุฌ:", error);
      alert("โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุฅุถุงูุฉ ุงูููุชุฌ.");
    }
  };

  return (
    <main className="min-h-screen bg-amber-50 p-6 text-center">
      <h1 className="text-3xl font-bold text-brown-700 mb-8">โ ุฅุถุงูุฉ ููุชุฌ ุฌุฏูุฏ</h1>

      <div className="max-w-md mx-auto bg-white p-6 rounded-lg shadow space-y-4">
        <input
          type="text"
          placeholder="๐ข ููุฏ ุงูููุชุฌ"
          value={product.code}
          onChange={(e) => setProduct({ ...product, code: e.target.value })}
          className="w-[100px] p-2 border rounded"
        />
        <input
          type="text"
          placeholder="๐ฆ ุงุณู ุงูููุชุฌ"
          value={product.name}
          onChange={(e) => setProduct({ ...product, name: e.target.value })}
          className="w-[100px] p-2 border rounded"
        />
        <input
          type="number"
          min="0"
          placeholder="๐ฆ ุงููููุฉ"
          value={product.quantity}
          onChange={(e) => setProduct({ ...product, quantity: e.target.value })}
          className="w-[100px] p-2 border rounded"
        />
        <input
          type="number"
          min="0"
          placeholder="โ๏ธ ุงููุฒู ุจุงููููู"
          value={product.weight}
          onChange={(e) => setProduct({ ...product, weight: e.target.value })}
          className="w-[100px] p-2 border rounded"
        />
        <select
          value={product.store}
          onChange={(e) => setProduct({ ...product, store: e.target.value })}
          className="w-[100px] p-2 border rounded"
        >
          <option value="chocolate">ูุฎุฒู ุงูุดููุงุทู</option>
          <option value="packs">ูุฎุฒู ุงูุจุงููุงุช</option>
          <option value="cafe">ูุฎุฒู ุงููุงูู</option>
        </select>
        <input
          type="text"
          placeholder="๐ ุฑุงุจุท ุตูุฑุฉ ุงูููุชุฌ"
          value={product.imageUrl}
          onChange={(e) => setProduct({ ...product, imageUrl: e.target.value })}
          className="w-[100px] p-2 border rounded"
        />

        <button
          onClick={handleAddProduct}
          className="w-full bg-brown-700 text-white py-2 rounded hover:bg-brown-800"
        >
          ุฅุถุงูุฉ ุงูููุชุฌ
        </button>

        <button
          onClick={() => router.push("/dashboard")}
          className="w-full mt-4 underline text-brown-700"
        >
          โฌ๏ธ ุงูุนูุฏุฉ ุฅูู ููุญุฉ ุงูุชุญูู
        </button>
      </div>
    </main>
  );
}
